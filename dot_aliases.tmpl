################################################################################
# git
################################################################################

alias ga='git add'
alias gaa='git add -A'
alias gba='git branch --all'
alias gbd='git branch -d'
alias gbD='git branch -D'
alias gbn='git checkout -b'
alias gcl='git clone'
alias gcm='git commit -m'
alias gco='git checkout'
alias gd='git diff'
alias gdc='git diff --cached'
alias gfa='git fetch --all'
alias gl='git log --branches --remotes --tags --graph --oneline --decorate'
alias gp='git push'
alias gpf='git push --force-with-lease'
alias gpu='git pull'
alias gpuff='git pull --ff-only'
alias gpur='git pull --rebase --autostash'
alias gpurm='git fetch --all && git pull --rebase --autostash origin main'
alias gpurmi='git fetch --all && git rebase --interactive --autostash origin/main'
alias gmm='git fetch --all && git merge origin/main'
alias gr='git rebase --autostash'
alias gri='git rebase --interactive'
alias gra='git rebase --abort'
alias grc='git rebase --continue'
alias grs='git rebase --skip'
alias gri='git rebase --interactive'
alias grsh='git reset --hard'
alias grss='git reset --'
alias gs='git status'
alias gstl='git stash list'
alias gst='git stash'
alias gsts='git stash show'
alias gstp='git stash pop'
alias gstpi='git stash pop --index'
alias gsta='git stash apply'
alias gcp='git cherry-pick'
alias gcpc='git cherry-pick --continue'
alias gcpa='git cherry-pick --abort'

# Git worktree aliases
alias gwt='git worktree'
alias gwtl='git worktree list'
alias gwtm='git worktree move'
alias gwtr='git worktree remove'
alias gwtp='git worktree prune'

# Git worktree add function - creates branch and worktree in .tree/ folder
function gwta() {
  if [ -z "$1" ]; then
    echo "Usage: gwta <branch-name>"
    return 1
  fi
  git worktree add -b "$1" ".tree/$1"
}

function gln() {
  n=${1:-1}
  git log "-$n"
}

function gbDm() {
  for branch in $(gba | grep $1 | grep -v origin) ; do
    gbD $branch;
  done
}


################################################################################
# bash
################################################################################

alias cdr='cd $(git rev-parse --show-toplevel)'
alias sbr='source ~/.bashrc'

function completeAlias() {
  echo "complete -F _complete_alias ${1}" >> ~/.bash_completion
}

################################################################################
# nvim
################################################################################

alias vimdiff='nvim -d'

################################################################################
# gradle
################################################################################

function gw() {
  DIR=$(pwd)
  cd $(git rev-parse --show-toplevel)
  ./gradlew "$@"
  cd "$DIR"
}

################################################################################
# docker
################################################################################

{{ if eq .podman true -}}
alias docker='podman'
{{ end -}}
alias d='docker'
alias dp='docker ps'
alias dpa='docker ps -a'
alias di='docker images'
alias dspa='docker system prune -a'
alias dvpa='docker volume prune -a'
alias ds='docker start'
alias dsa='docker start $(docker ps -qa)'
alias dst='docker stop'
alias dsta='docker stop $(docker ps -q)'
alias drma='docker rm $(docker ps -aq)'
alias dei='docker exec -ti'

################################################################################
# docker-compose
################################################################################

alias dc='docker compose'
alias dcu='docker compose up -d'
alias dcd='docker compose down'

function dcuf() {
  FILE=$1
  shift
  docker-compose -f $FILE up -d $@
}

function dcdf() {
  FILE=$1
  shift
  docker-compose -f $FILE down $@
}

################################################################################
# npm
################################################################################

alias nc='npm-check'

################################################################################
# yarn
################################################################################

alias y='yarn'
alias yd='yarn && yarn dev'
alias ywt='yarn watch-test'
alias yt='yarn test'
alias yw='yarn watch'
alias yss='yarn start-storybook'
alias ytl='yarn test && yarn lint'
alias yc='yarn-check'
alias ycu='yarn-check -u'
alias ycz='yarn commit'

################################################################################
# tmux
################################################################################

alias t='tmux'
alias tn='tmux new -s'
alias ta='tmux attach -t'
alias tl='tmux ls'
alias tk='tmux kill-session -t'
alias s='~/Scripts/tmux-sessionizer'


################################################################################
# erlang / elixir
################################################################################

alias iex='iex --erl "-kernel shell_history enabled"'

################################################################################
# kubernetes
################################################################################

################################################################################
# ash
################################################################################

alias ash_gen_migrations="mix ecto.rollback && rm -rf priv && gco origin/main priv && mix ash_postgres.generate_migrations --name name --domains Domain && mix ecto.migrate"

################################################################################

################################################################################
# chezmoi
################################################################################

alias c=chezmoi

################################################################################
# fly
################################################################################

alias fly=flyctl

################################################################################
# livebook
################################################################################
# In order to access and save notebooks directly to your machine
# you can mount a local directory into the container.
# Make sure to specify the user with "-u $(id -u):$(id -g)"
# so that the created files have proper permissions
alias livebook="docker run -p 8080:8080 -p 8081:8081 --pull always -u $(id -u):$(id -g) -v $HOME/sandbox/livebook_data:/data ghcr.io/livebook-dev/livebook"

################################################################################
# bitwarden cli
################################################################################
alias bws='export BW_SESSION=$(bw unlock --raw)'

################################################################################
# taskwarrior-tui
################################################################################

alias twt='taskwarrior-tui --taskrc ~/.taskrc'
